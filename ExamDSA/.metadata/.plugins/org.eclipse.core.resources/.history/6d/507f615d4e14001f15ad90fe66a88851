package DSA;

public class SingleCircularLinkedList {

	public static class Node {
	    String data;
	    Node next;

	    public Node(String data) {
	        this.data = data;
	        this.next = null;
	    }
	      
	}
	
	private Node head;
    private Node tail;

    public SingleCircularLinkedList() {
        this.head = null;
        this.tail = null;
    }
    

    public void addLast(String data) {
        Node newNode = new Node(data);
        if (head == null) {
            head = newNode;
            tail = newNode;
            newNode.next = head;
        } else {
            tail.next = newNode;
            tail = newNode;
            tail.next = head;
        }
    }
	
    public void deleteLast() {
        if (head == null) {
            return;
        }
        
        if(head == tail) {
        	head=tail = null;
        }
        
        else {
        	 Node trav = head;
        	while(trav.next!=tail)
        		trav = trav.next;
        	trav.next = head;
        	tail = trav;
        }
    }
    public void display() {
        if (head == null) {
            System.out.println("The list is empty.");
            return;
        }
        Node temp = head;
        do {
            System.out.print(temp.data + " ");
            temp = temp.next;
        } while (temp != head);
        
        System.out.println();
    }


	public Node getHead() {
		return head;
	}

}

 